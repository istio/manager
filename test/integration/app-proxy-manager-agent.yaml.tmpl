# Example service with an injected proxy
apiVersion: v1
kind: Service
metadata:
  name: {{.service}}
  labels:
    app: {{.service}}
spec:
  ports:
  - port: 80
    targetPort: {{.port1}}
    name: http
  - port: 8080
    targetPort: {{.port2}}
    name: http-two
  - port: 90
    targetPort: {{.port3}}
    name: tcp
  - port: 9090
    targetPort: {{.port4}}
    name: https
  selector:
    app: {{.service}}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{.name}}
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: {{.service}}
        version: {{.version}}
      annotations:
        pod.beta.kubernetes.io/init-containers: >
          [{
            "name": "iptables",
            "image": "{{.hub}}/init:{{.tag}}",
            "imagePullPolicy": "Always",
            "securityContext": { "capabilities" : { "add" : ["NET_ADMIN"] } }
          }]
    spec:
      containers:
      - name: app
        image: {{.hub}}/app:{{.tag}}
        imagePullPolicy: Always
        args:
          - --port
          - "{{.port1}}"
          - --port
          - "{{.port2}}"
          - --port
          - "{{.port3}}"
          - --port
          - "{{.port4}}"
          - --version
          - "{{.version}}"
        ports:
        - containerPort: {{.port1}}
        - containerPort: {{.port2}}
        - containerPort: {{.port3}}
        - containerPort: {{.port4}}
      - name: proxy
        image: {{.hub}}/runtime:{{.tag}}
        imagePullPolicy: Always
        securityContext:
          runAsUser: 1337
        args:
          - proxy
          - sidecar
          - -s
          - manager:8080
          - -m
          - mixer:9091
          - -n
          - $(POD_NAMESPACE)
          - -v
          - "{{.verbosity}}"
        env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
      - name: debug
        image: docker.io/istio/debug:test
        imagePullPolicy: Always
        securityContext:
            privileged: true
---

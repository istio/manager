# Kubernetes set-up
apiVersion: v1
kind: Service
metadata:
  name: a
  labels:
    app: a
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 8080
    name: http
  selector:
    app: a
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: a
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: a
      annotations:
        pod.beta.kubernetes.io/init-containers: '[
          {
            "name": "iptables",
            "image": "gcr.io/istio-test/init:test",
            "imagePullPolicy": "Always",
            "securityContext": {
              "privileged": true
            },
            "command": ["/bin/bash", "-c", "sudo iptables -t nat -A PREROUTING -p tcp --dport 8080 -j REDIRECT --to-port 9999"]
          }
        ]'
    spec:
      containers:
      - name: echo
        image: gcr.io/google_containers/echoserver:1.4
        ports:
        - containerPort: 8080
      - name: proxy
        image: gcr.io/istio-test/runtime:test
        args: ["proxy", "-s", "manager:8080", "--logtostderr", "-v", "2", "-p", "9999", "-n", "default"]
        imagePullPolicy: Always
        ports:
        - containerPort: 9999
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: test
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: test
    spec:
      containers:
      - name: echo
        image: gcr.io/google_containers/echoserver:1.4
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: mixer
  labels:
    app: mixer
spec:
  ports:
  - port: 80
    targetPort: 9091
    name: grpc
  selector:
    app: mixer
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: mixer
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: mixer
    spec:
      containers:
      - name: mixer
        image: gcr.io/istio-test/mixer:example
        imagePullPolicy: Always
        ports:
        - containerPort: 9091
---
apiVersion: v1
kind: Service
metadata:
  name: manager
  labels:
    app: manager
spec:
  ports:
  - port: 8080
    name: http-discovery
  selector:
    app: manager
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: manager
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: manager
    spec:
      containers:
      - name: manager
        image: gcr.io/istio-test/runtime:test
        args: ["server", "--logtostderr", "-v", "2"]
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
